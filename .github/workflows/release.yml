name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: space-downloader-gui.exe
            asset_name: space-downloader-windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.platform.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbcommon-dev libwayland-dev

      - name: Build release binary
        run: cargo build --release --package space-downloader-gui --target ${{ matrix.platform.target }}

      - name: Strip binary (Linux and macOS)
        if: matrix.platform.os != 'windows-latest'
        run: strip target/${{ matrix.platform.target }}/release/${{ matrix.platform.artifact_name }}

      - name: Download dependencies (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          mkdir bundle
          copy target\${{ matrix.platform.target }}\release\${{ matrix.platform.artifact_name }} bundle\
          pwsh -ExecutionPolicy Bypass -File scripts\download-dependencies.ps1 -OutputDir bundle
        shell: cmd

      - name: Download dependencies (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mkdir -p bundle
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.artifact_name }} bundle/
          chmod +x scripts/download-dependencies.sh
          ./scripts/download-dependencies.sh bundle

      - name: Download dependencies (macOS)
        if: matrix.platform.os == 'macos-latest'
        run: |
          mkdir -p bundle
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.artifact_name }} bundle/
          chmod +x scripts/download-dependencies.sh
          ./scripts/download-dependencies.sh bundle

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.asset_name }}
          path: bundle/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create ZIP archives
        run: |
          cd artifacts
          for dir in */; do
            dirname="${dir%/}"
            cd "$dirname"
            if [ -f space-downloader-gui.exe ]; then
              # Windows: include exe and dependencies
              zip -r "../${dirname}.zip" *
            else
              # Linux/macOS: include binary and dependencies
              chmod +x space-downloader-gui 2>/dev/null || true
              chmod +x yt-dlp 2>/dev/null || true
              chmod +x ffmpeg 2>/dev/null || true
              chmod +x ffprobe 2>/dev/null || true
              zip -r "../${dirname}.zip" *
            fi
            cd ..
          done

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/*.zip
          body: |
            ## Space Downloader ${{ steps.get_version.outputs.VERSION }}

            ### Downloads
            - Windows (x64): `space-downloader-windows-x64.zip`

            ### What's Included
            Each ZIP file contains:
            - Space Downloader executable
            - yt-dlp (latest version)
            - ffmpeg (latest version)
            - ffprobe (latest version)

            **No additional dependencies required!** All necessary tools are bundled.

            ### Installation
            1. Download the ZIP file for your platform
            2. Extract all files to a folder
            3. Run `space-downloader-gui.exe` (Windows) or `space-downloader-gui` (Linux/macOS)

            ### Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
